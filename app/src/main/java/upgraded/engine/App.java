/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package upgraded.engine;

import java.util.List;
import java.util.LinkedList;

import java.util.concurrent.Flow.*;
import java.util.concurrent.SubmissionPublisher;
import java.util.concurrent.SubmissionPublisher;
import java.util.concurrent.atomic.AtomicInteger;

public class App {
    
    public static void main(String[] args) throws InterruptedException{
        SubmissionPublisher<String> workleader = new SubmissionPublisher<>();
        Worker<String> firstworker = new Worker<>(5);
        Worker<String> secondworker = new Worker<>(20);
        CounterSubscriber<String> counter = new CounterSubscriber<>(i -> i%75 == 0);
        workleader.subscribe(firstworker);
        firstworker.subscribe(secondworker);
        secondworker.subscribe(counter);

        long initialtime = System.currentTimeMillis();

        
        for (int i=0; i<1000; i++) {
            workleader.submit("a");
        }

        workleader.close();

        while(counter.getCount() < 1000) {

        }

        System.out.println("took " + (System.currentTimeMillis() - initialtime) + " timeunits");

    }

}
